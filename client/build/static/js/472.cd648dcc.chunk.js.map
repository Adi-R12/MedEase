{"version":3,"file":"static/js/472.cd648dcc.chunk.js","mappings":"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","sources":["components/Empty.jsx","components/AdminApplications.jsx","components/AdminAppointments.jsx","components/AdminDoctors.jsx","components/Sidebar.jsx","components/Users.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Empty = () => {\n  return <h2 className=\"nothing flex-center\">Nothing to show</h2>;\n};\n\nexport default Empty;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/user.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminApplications = () => {\n  const [applications, setApplications] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllApp = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/doctor/getnotdoctors`);\n      setApplications(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const acceptUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to accept?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/acceptdoctor\",\n            { id: userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n              data: { userId },\n            }\n          ),\n          {\n            success: \"Application accepted\",\n            error: \"Unable to accept application\",\n            loading: \"Accepting application...\",\n          }\n        );\n        getAllApp();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/rejectdoctor\",\n            { id: userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n              data: { userId },\n            }\n          ),\n          {\n            success: \"Application rejected\",\n            error: \"Unable to reject application\",\n            loading: \"Rejecting application...\",\n          }\n        );\n        getAllApp();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllApp();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Applications</h3>\n          {applications.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Experience</th>\n                    <th>Specialization</th>\n                    <th>Fees</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {applications?.map((ele, i) => {\n                    return (\n                      <tr key={ele._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={\n                              ele.userId.pic ||\n                              \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\n                            }\n                            alt={ele.userId.firstname}\n                          />\n                        </td>\n                        <td>{ele.userId.firstname}</td>\n                        <td>{ele.userId.lastname}</td>\n                        <td>{ele.userId.email}</td>\n                        <td>{ele.userId.mobile}</td>\n                        <td>{ele.experience}</td>\n                        <td>{ele.specialization}</td>\n                        <td>{ele.fees}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn accept-btn\"\n                            onClick={() => {\n                              acceptUser(ele.userId._id);\n                            }}\n                          >\n                            Accept\n                          </button>\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele.userId._id);\n                            }}\n                          >\n                            Reject\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminApplications;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/user.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminAppointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllAppoint = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/appointment/getallappointments`);\n      setAppointments(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.delete(\"/user/deleteuser\", {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n            data: { userId },\n          }),\n          {\n            pending: \"Deleting in...\",\n            success: \"User deleted successfully\",\n            error: \"Unable to delete user\",\n            loading: \"Deleting user...\",\n          }\n        );\n        getAllAppoint();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllAppoint();\n  }, []);\n\n  const complete = async (ele) => {\n    try {\n      const { data } = await toast.promise(\n        axios.put(\n          \"/appointment/completed\",\n          {\n            appointid: ele._id,\n            doctorId: ele.doctorId._id,\n            doctorname: `${ele.userId.firstname} ${ele.userId.lastname}`,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n          }\n        ),\n        {\n          success: \"Appointment booked successfully\",\n          error: \"Unable to book appointment\",\n          loading: \"Booking appointment...\",\n        }\n      );\n\n      getAllAppoint();\n    } catch (error) {\n      return error;\n    }\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Users</h3>\n          {appointments.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Doctor</th>\n                    <th>Patient</th>\n                    <th>Appointment Date</th>\n                    <th>Appointment Time</th>\n                    <th>Booking Date</th>\n                    <th>Booking Time</th>\n                    <th>Status</th>\n\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {appointments?.map((ele, i) => {\n                    return (\n                      <tr key={ele._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          {ele.doctorId?.firstname +\n                            \" \" +\n                            ele.doctorId?.lastname}\n                        </td>\n                        <td>\n                          {ele.userId?.firstname + \" \" + ele.userId?.lastname}\n                        </td>\n                        <td>{ele.date}</td>\n                        <td>{ele.time}</td>\n                        <td>{ele.createdAt.split(\"T\")[0]}</td>\n                        <td>{ele.updatedAt.split(\"T\")[1].split(\".\")[0]}</td>\n                        <td>{ele.status}</td>\n                        <td>\n                          <button\n                            className={`btn user-btn accept-btn ${\n                              ele.status === \"Completed\" ? \"disable-btn\" : \"\"\n                            }`}\n                            disabled={ele.status === \"Completed\"}\n                            onClick={() => complete(ele)}\n                          >\n                            Complete\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminAppointments;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/user.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst AdminDoctors = () => {\n  const [doctors, setDoctors] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllDoctors = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/doctor/getalldoctors`);\n      setDoctors(temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.put(\n            \"/doctor/deletedoctor\",\n            { userId },\n            {\n              headers: {\n                authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n              },\n            }\n          ),\n          {\n            success: \"Doctor deleted successfully\",\n            error: \"Unable to delete Doctor\",\n            loading: \"Deleting Doctor...\",\n          }\n        );\n        getAllDoctors();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllDoctors();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Doctors</h3>\n          {doctors.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Experience</th>\n                    <th>Specialization</th>\n                    <th>Fees</th>\n                    <th>Remove</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {doctors?.map((ele, i) => {\n                    return (\n                      <tr key={ele._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={ele.userId.pic}\n                            alt={ele.userId.firstname}\n                          />\n                        </td>\n                        <td>{ele.userId.firstname}</td>\n                        <td>{ele.userId.lastname}</td>\n                        <td>{ele.userId.email}</td>\n                        <td>{ele.userId.mobile}</td>\n                        <td>{ele.experience}</td>\n                        <td>{ele.specialization}</td>\n                        <td>{ele.fees}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele.userId._id);\n                            }}\n                          >\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default AdminDoctors;\n","import React from \"react\";\nimport {\n  FaHome,\n  FaList,\n  FaUser,\n  FaUserMd,\n  FaUsers,\n  FaEnvelope,\n} from \"react-icons/fa\";\nimport \"../styles/sidebar.css\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { MdLogout } from \"react-icons/md\";\nimport { useDispatch } from \"react-redux\";\nimport { setUserInfo } from \"../redux/reducers/rootSlice\";\n\nconst Sidebar = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const sidebar = [\n    {\n      name: \"Home\",\n      path: \"/\",\n      icon: <FaHome />,\n    },\n    {\n      name: \"Users\",\n      path: \"/dashboard/users\",\n      icon: <FaUsers />,\n    },\n    {\n      name: \"Doctors\",\n      path: \"/dashboard/doctors\",\n      icon: <FaUserMd />,\n    },\n    {\n      name: \"Appointments\",\n      path: \"/dashboard/appointments\",\n      icon: <FaList />,\n    },\n    {\n      name: \"Applications\",\n      path: \"/dashboard/applications\",\n      icon: <FaEnvelope />,\n    },\n    {\n      name: \"Profile\",\n      path: \"/profile\",\n      icon: <FaUser />,\n    },\n  ];\n\n  const logoutFunc = () => {\n    dispatch(setUserInfo({}));\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <>\n      <section className=\"sidebar-section flex-center\">\n        <div className=\"sidebar-container\">\n          <ul>\n            {sidebar.map((ele, i) => {\n              return (\n                <li key={i}>\n                  {ele.icon}\n                  <NavLink to={ele.path}>{ele.name}</NavLink>\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"logout-container\">\n            <MdLogout />\n            <p onClick={logoutFunc}>Logout</p>\n          </div>\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useEffect } from \"react\";\nimport \"../styles/user.css\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport Loading from \"./Loading\";\nimport { setLoading } from \"../redux/reducers/rootSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Empty from \"./Empty\";\nimport fetchData from \"../helper/apiCall\";\n\naxios.defaults.baseURL = process.env.REACT_APP_SERVER_DOMAIN;\n\nconst Users = () => {\n  const [users, setUsers] = useState([]);\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state) => state.root);\n\n  const getAllUsers = async (e) => {\n    try {\n      dispatch(setLoading(true));\n      const temp = await fetchData(`/user/getallusers`);\n      setUsers(temp);\n      console.log(\"🚀 ~ file: Users.jsx:23 ~ getAllUsers ~ temp:\", temp);\n      dispatch(setLoading(false));\n    } catch (error) {}\n  };\n\n  const deleteUser = async (userId) => {\n    try {\n      const confirm = window.confirm(\"Are you sure you want to delete?\");\n      if (confirm) {\n        const { data } = await toast.promise(\n          axios.delete(\"/user/deleteuser\", {\n            headers: {\n              authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            },\n            data: { userId },\n          }),\n          {\n            pending: \"Deleting in...\",\n            success: \"User deleted successfully\",\n            error: \"Unable to delete user\",\n            loading: \"Deleting user...\",\n          }\n        );\n        getAllUsers();\n      }\n    } catch (error) {\n      return error;\n    }\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <Loading />\n      ) : (\n        <section className=\"user-section\">\n          <h3 className=\"home-sub-heading\">All Users</h3>\n          {users.length > 0 ? (\n            <div className=\"user-container\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>S.No</th>\n                    <th>Pic</th>\n                    <th>First Name</th>\n                    <th>Last Name</th>\n                    <th>Email</th>\n                    <th>Mobile No.</th>\n                    <th>Age</th>\n                    <th>Gender</th>\n                    <th>Is Doctor</th>\n                    <th>Remove</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users?.map((ele, i) => {\n                    return (\n                      <tr key={ele._id}>\n                        <td>{i + 1}</td>\n                        <td>\n                          <img\n                            className=\"user-table-pic\"\n                            src={ele.pic}\n                            alt={ele.firstname}\n                          />\n                        </td>\n                        <td>{ele.firstname}</td>\n                        <td>{ele.lastname}</td>\n                        <td>{ele.email}</td>\n                        <td>{ele.mobile}</td>\n                        <td>{ele.age}</td>\n                        <td>{ele.gender}</td>\n                        <td>{ele.isDoctor ? \"Yes\" : \"No\"}</td>\n                        <td className=\"select\">\n                          <button\n                            className=\"btn user-btn\"\n                            onClick={() => {\n                              deleteUser(ele._id);\n                            }}\n                          >\n                            Remove\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <Empty />\n          )}\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\nimport AdminApplications from \"../components/AdminApplications\";\nimport AdminAppointments from \"../components/AdminAppointments\";\nimport AdminDoctors from \"../components/AdminDoctors\";\nimport Sidebar from \"../components/Sidebar\";\nimport Users from \"../components/Users\";\n\nconst Dashboard = (props) => {\n  const { type } = props;\n  return (\n    <>\n      <section className=\"layout-section\">\n        <div className=\"layout-container\">\n          <Sidebar />\n          {type === \"users\" ? (\n            <Users />\n          ) : type === \"doctors\" ? (\n            <AdminDoctors />\n          ) : type === \"applications\" ? (\n            <AdminApplications />\n          ) : type === \"appointments\" ? (\n            <AdminAppointments />\n          ) : (\n            <></>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Dashboard;\n"],"names":["className","axios","process","useState","applications","setApplications","dispatch","useDispatch","loading","useSelector","state","root","getAllApp","e","setLoading","fetchData","temp","acceptUser","userId","window","confirm","toast","id","headers","authorization","localStorage","getItem","data","success","error","deleteUser","useEffect","Loading","length","map","ele","i","src","pic","alt","firstname","lastname","email","mobile","experience","specialization","fees","onClick","_id","Empty","appointments","setAppointments","getAllAppoint","complete","appointid","doctorId","doctorname","Authorization","date","time","createdAt","split","updatedAt","status","disabled","doctors","setDoctors","getAllDoctors","navigate","useNavigate","sidebar","name","path","icon","to","setUserInfo","removeItem","users","setUsers","getAllUsers","console","log","pending","age","gender","isDoctor","props","type"],"sourceRoot":""}